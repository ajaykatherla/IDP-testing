name: Node.js CI/CD with AKS Integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'  # Specify the Node.js version you want to use

    # Install dependencies
    - name: Install dependencies
      run: npm install

    # Run tests (optional but recommended)
    - name: Run tests
      run: npm test

    # Build the application
    - name: Build application
      run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Checkout code again in the deploy step
      - name: Checkout code
        uses: actions/checkout@v3

      # Azure Login using Service Principal
      - name: Azure Login
        uses: azure/login@v1
        with:
          app-id: ${{ secrets.AZURE_APP_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

      # Set up Azure Kubernetes CLI (kubectl)
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      # Configure kubectl to use AKS credentials
      - name: Set up kubectl to access AKS
        run: |
          az aks get-credentials --resource-group myResourceGroup --name myAKSCluster

      # Deploy the app to AKS (e.g., kubectl apply)
      - name: Deploy to AKS
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

